{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Welcome <p>Loose Lab</p> <p></p>"},{"location":"#about","title":"About","text":"<p>Our research focuses on the robust implementation of long-reads sequencing  in different area of applications. We push the limits of sequencing platform by addressing important technical goals, from successfully obtaining intact chromosomes sequence and trying to enrich rare and elusive transcripts.</p> <p>Our current research goal is but not limited to:</p> <ul> <li> <p></p> <p>Sequencing of of ultra-long or \"whales\" reads</p> </li> <li> <p></p> <p>Nanopore adaptive sampling for DNA and RNA</p> </li> <li> <p></p> <p>Implementation of real-time nanopore data analysis</p> </li> </ul>"},{"location":"#featured-protocols-and-tools","title":"Featured Protocols and Tools","text":"<ul> <li> <p> Protocol: FindingNemo in OneDay</p> <p>Cell to Flowcell in One Day</p> <p> Protocol.io</p> </li> <li> <p></p> <p> Tool: ReadFish</p> <p>Flexible and fast adaptive sampling</p> <p> Github</p> </li> <li> <p></p> <p> Tool: ROBIN</p> <p>Real time analysis of nanopore methylation data</p> <p> Github</p> </li> </ul> <p>Find more protocols and tools</p>"},{"location":"#news-and-release","title":"News and Release","text":"<ul> <li> <p>ReadFish Multiplatform Update</p> <p>Up until now ReadFish, and selective sequencing, have been limited to users with both a linux ...</p> <p>2020-12-02</p> <p> Read</p> </li> </ul>"},{"location":"#collaborators","title":"Collaborators","text":""},{"location":"contact/","title":"Contact","text":"<p>Our lab is based at the University of Nottingham in the School of Life Sciences. In our lab we work on a range of questions with a whole host of great collaborators. If you want to find out more then get in touch - easiest way is to do that is via  @mattloose.</p>"},{"location":"contact/#issues","title":"Issues","text":"<p>For issues on software please use our  Github repositories as appropriate.</p>"},{"location":"contact/#location","title":"Location","text":""},{"location":"media/","title":"Media","text":""},{"location":"media/#collaborators","title":"Collaborators","text":""},{"location":"people/","title":"People","text":""},{"location":"people/#current-member","title":"Current Member","text":"Professor Matthew Loose <p>Group Lead</p> Details Dr. Inswasti Cahyani <p>Researcher</p> Details Rory Munro <p>Postgraduate Researcher</p> Details Simon Deacon <p>Postgraduate Researcher</p> Details Thomas Murray <p>Postgraduate Researcher</p> Details Satrio <p>Postgraduate Researcher</p> Details"},{"location":"people/#past-member","title":"Past Member","text":"<ul> <li>Alexander Payne</li> <li>Roberto Santos</li> <li>Lewis Gallagher</li> <li>Sam Holt</li> <li>Chris Alder</li> <li>Solomon Osei</li> <li>Teri Forey</li> </ul>"},{"location":"publications/","title":"Publications","text":"(Top of the page) <ul> <li> ,            , , In , , , . </li> </ul>"},{"location":"research/","title":"Research","text":""},{"location":"research/#publications","title":"Publications","text":"(Top of the page) <ul> <li> ,            , , In , , , . </li> </ul> <p>List all publications</p>"},{"location":"research/#protocols","title":"Protocols","text":"<ul> <li> <p> Protocol: FindingNemo</p> <p>CoHex- and Glass Bead-based Protocols ...</p> <p>Protocol.io</p> </li> <li> <p></p> <p> Protocol: FindingNemo in OneDay</p> <p>Cell to Flowcell in One Day</p> <p> Protocol.io</p> </li> </ul> <ul> <li> <p> Protocol: FindingNemo (v.kit14)</p> <p>FindingNemo (v.kit14): A Toolkit for DNA Extraction, Library Preparation and P ...</p> <p> Protocol.io</p> </li> <li> <p> Protocol: Ultra-Long Sequencing of Yeast Cells</p> <p>Ultra-Long Sequencing of Yeast Cells (S. cerevisiae) on ONT Sequencers \u2013 A ...</p> <p> Protocol.io</p> </li> <li> <p>Comming Soon!</p> </li> </ul>"},{"location":"research/#tools","title":"Tools","text":"<ul> <li> <p> Tool: ReadFish</p> <p>Flexible and fast adaptive sampling</p> <p> Github</p> </li> <li> <p></p> <p> Tool: ROBIN</p> <p>Real time analysis of nanopore methylation data</p> <p> Github</p> </li> </ul> <ul> <li> <p> Tool: minoTour</p> <p>time Laboratory Information Management System for ONT sequencers</p> <p> Github</p> </li> <li> <p> Tool: Icarust</p> <p>MinKNOW simulator for testing read until experiments</p> <p> Github</p> </li> <li> <p> Tool: CNV From BAM</p> <p>Rust library developed to efficiently calculate dynamic Copy Number Variation (CNV) </p> <p> Github</p> </li> <li> <p> Tool: Bulkvis</p> <p>Visualise squiggle data from Oxford Nanopore Technologies (ONT) signal files</p> <p> Github</p> </li> </ul> <p>Go to LooseLab repo</p>"},{"location":"blog/2020/11/29/introducing-readfish/","title":"Introducing ReadFish","text":"<p> * ReadFish</p> <p>Today sees our preprint on adaptive sampling graduate to a full paper. This was a lot of work from a lot of people and we're very happy to see the paper out.</p> <p>Read Until to enrich &gt;700 genes to mean 30x coverage on @nanopore single flowcell. Custom panels (up to 25,600 targets so far) as easy as providing a coordinate file. Read more at https://t.co/aZVOs23PKg - thanks to @alexomics, @Rorymatics and @DeepSeqNotts team. pic.twitter.com/0FBLlGQZdm</p>\u2014 Matt Loose (@mattloose) February 3, 2020 <p>If you want to read the paper, in Nature Biotechnology, you can do so here.</p> <p>We show in the final version that we can capture targets at depths in excess of 50x on a single MinION flowcell as can be seen in the figure below.</p> Illustrating 50x coverage over two genes from the COSMIC panel. <p>This blog is to talk a little about the changes we have made since the pre-print and to explain what we will be doing with our code in the next few months.</p> <p>Firstly - why the name? Well - you gotta catch 'em all! If you don't know the link between Nanopore and fish then have a look at the software. We were asked to distinguish between our toolset and that provided by Oxford Nanopore - which makes sense given that with the recent release of MinKNOW for GridION Mk1, Oxford Nanopore have shipped an implementation for selecting individual regions from a genome or host enrichment or depletion. This may come to other platforms in the future. </p> <p>So what does ReadFish do? Well - it enables you to select molecules from a library computationally - to catch whatever you like - on any platform with access to GPU basecalling (currently linux only). We built ReadFish as a platform to develop methods to exploit this unique ability of nanopore sequencers and the current toolkit is just the start. </p> Coverage over two different runs for the entire COSMIC Panel. <p>To date we have used ReadFish to capture many hundreds of genes to depths of around 30x (and sometimes up to 50x) on a single flowcell, enrich or deplete individual genomes from a background, and a personal favourite, identifying the composition of a sample and selecting individual components dynamically. ReadFish provides the ability to change what you are selecting for during a run in response to the data that has been seen to that point. This makes it adaptive.</p> Proportion of bases sequenced mapping to each genome present within the Zymo collection. However, genomes are identified dynamically by ReadFish using centrifuge during the run. <p>ReadFish currently enables adaptive sampling on any computer able to run GPU basecalling with Guppy. The computer and environment must be powerful enough to basecall at lesast two flowcells in real time and to handle mapping duties. For a human genome scale project, you need at least 16 Gb of RAM. ReadFish will be our vehicle for developing new methods around Read Until so keep an eye on this blog for updates. </p> <p>Some of our future plans are described in a preprint from De Maio et al here.</p> <p>Advice on how to run ReadFish can be found here.</p> <p>Please pay particular attention to our instructions to test your experiment before running for real. Playback is your friend...</p>"},{"location":"blog/2020/11/29/paper-using-readfish/","title":"Paper using ReadFish","text":"<p>Excited to share our work that demonstrates the clinical potential of targeted long-read sequencing. We use Read Fish (Read Until) on a @nanopore platform to systematically analyze clinical samples and find variants not seen w/clinical testing. 1/n https://t.co/DjE1Bi7wHh</p>\u2014 Danny Miller, MD, PhD (@danrdanny) November 4, 2020 <p>It's great to see this paper from Danny Miller and colleagues who have used ReadFish and selective sequencing to analyse the genomes of 33 individuals. They investigate the utility of adaptive sampling for a range of different questions of relevance to human disease and obtain approximately 20x coverage over all their targets on each flowcell.</p> <p>This is a really interesting paper and a nice use of selective sequencing.  Now Oxford Nanopore have built this basic use case into MinKNOW, users with access to MinKNOW on a GridION MK1 can run this very easily. If you have access to GPU then you can use our ReadFish tools to do the same thing.</p> <p>The 20x coverage can be improved by using a nuclease flush of the flowcell every 24 hours or so and also loading slightly more library than you would do normally. Depending on how many reads you will be rejecting, you will alter the read length profile of your library and - effectively - the molarity as far as sequencable ends. So we recommend overloading your library. </p>"},{"location":"blog/2020/12/02/readfish-multiplatform-update/","title":"ReadFish Multiplatform Update","text":"<p>Up until now ReadFish, and selective sequencing, have been limited to users  with both a linux OS and an NVIDIA GPU. In reality this requires a fairly  large box - be it a GridION or a desktop able to support an NVIDIA 1080 GPU  or above. However, it would be ideal to be able to run selective sequencing on a laptop -  even if it needs to be a moderately powerful device. This was already possible  with ReadFish if you have a beefy NVIDIA GPU but many notable laptops cough  Apple cough don't support this at this time. Quite quickly after releasing our preprint people suggested using a CPU base  caller:</p> <p>Or just do CPU basecalling ;) https://t.co/ICgitgG4Hj</p>\u2014 Vlado Boza (@bozavlado) February 6, 2020 <p>Given the way we developed ReadFish, it is relatively straightforward to use  different components. We therefore decided to implement an alternative base  calling strategy using DeepNano-Blitz instead of Guppy. As a  consequence we have been able to implement selective sequencing on computers  without GPU and running Linux, macOS and even Windows. This brings the power of  selective sequencing to laptops (with a few caveats below).</p> <p>This also enabled @mattloose to spend a happy weekend running selective  sequencing on a human genome at home. </p> Happy home readfishing..."},{"location":"blog/2020/12/02/readfish-multiplatform-update/#results","title":"Results","text":"<p>So far we've run using DeepNano-Blitz on macOS, Windows (WSL), GridION, and  Linux. In all cases we have seen enrichment comparable to running ReadFish  using GPU accelerated base calling. A key caveat is that our DeepNano-Blitz  implementation is currently non-adaptive; that is, it can enrich or deplete  specific genomes or targets but this implementation does not automatically  monitor reads as they are written or change targets during the experiment.</p> <p>With that cleared up - what do we see?  The figures below show coverage over BRCA1, PML and RARA, for runs on the  GridION Mk1 CPU, a linux box we found in the lab, a MacBook Pro (2018 - 3.1  GHz i7), and a windows desktop running Windows Subsystem for Linux (windows 10). We also show two runs from our paper for comparison - the GridION Mk1 and the  same linux box using an NVIDIA GTX 1080 GPU.</p> <p>As can be seen, the coverage obtained with DeepNano-Blitz ReadFish is  comparable (and on windows better!) than that seen on our original experiments.</p>      Coverage over BRCA1 when using the COSMIC panel and ReadFish either with      Guppy (GPU) base calling or DeepNano-Blitz (cpu). Smaller figures below      illustrate coverage over PML and RARA for the same experiments.    <p>In the plot below you can choose a chromosome and look at the distribution of  coverage for each target. Broadly speaking this is pretty uniform although a  few targets have pseudogenes that could be cleaned up in future (for example  see chromosome 4).</p> <p>{% include 20201130_plot.html %}</p> <p>The difference in coverage is largely down to down to yield for each flow cell.  But there are some subtle differences which become apparent. Compare the GPU  and CPU coverage on the GridION. The GPU experiment had much lower yield, but  the median read length was shorter. Similarly, the Linux GPU has very low yield,  but also one of the best median read lengths we have seen. The take home here  is that speed is everything for efficient read until experiments. The faster  you can unblock reads you don't wish to see, the better (and flushing your  flow cell can help recover capacity). Thus the windows run shown here, at  17\u00a0Gb, uses brute force of yield to compensate for the longer reads  observed. There is still room for tuning the windows based setup. </p> GridION MK1\u00a0GPU GridION MK1\u00a0CPU Linux GPU Linux CPU MacBook Pro\u00a0CPU Windows CPU Mean Read Length 735.6 878.9 683.7 771.2 1085.0 1146.9 Median Read Length 423.0 662.0 402.0 564.0 745.0 823.0 Yield 9.08\u00a0Gb 14.93\u00a0Gb 5.90\u00a0Gb 14.31\u00a0Gb 14.03\u00a0Gb 17.27\u00a0Gb Mean Coverage 31.30 29.78 19.11 27.78 29.08 34.47 Coverage Std 5.54 5.30 3.23 5.09 5.24 6.62 Flushes 2 2 2 2 2 3"},{"location":"blog/2020/12/02/readfish-multiplatform-update/#hardware-requirements","title":"Hardware Requirements","text":"<p>To run everything from one laptop (or desktop) we recommend at least 16\u00a0Gb  of RAM, 8 processing cores and an SSD. The processor needs to be one of intel  i7 or Xeon. </p> <p>ReadFish will use four cores for base calling and mapping an entire flow cell  in real time, leaving the remainder of the CPU power for MinKNOW. We have not  run on an infinite number of systems and your mileage may vary, but  DeepNano-Blitz provides a number of different models that you can try.</p>"},{"location":"blog/2020/12/02/readfish-multiplatform-update/#caveats","title":"Caveats","text":"<p>This branch of ReadFish is under development and  provided as is for you to try  out. </p> <p>Currently this is only compatible with R9.4 data on DNA. This contrasts with  Guppy ReadFish, which can handle RNA as well as DNA and any currently shipping  flow cell type from ONT.</p> <p>We have not yet implemented real-time base calling for the downstream reads -  so any of our tools that look at base called reads to inform the choice of  reads for sequencing will not currently work.</p>"},{"location":"blog/2020/12/02/readfish-multiplatform-update/#so-how-do-i-set-this-up","title":"So how do I set this up?","text":"<p>To get started you will need to download the pre-built DeepNano-Blitz installers:</p> <ul> <li>Ubuntu:</li> <li>Python 3.6, 3.7, 3.8, 3.9, 3.10</li> <li>macOS:</li> <li>Python 3.6, 3.7, 3.8, 3.9, 3.10</li> </ul> <p>If you run into issues accessing or installing these, please contact us.</p> <p>On Windows we use Windows Subsytem Linux (WSL) to run ReadFish.  To setup WSL see the Microsoft documentation. Once this is  installed you may need to install or upgrade the Python3 version  to be one of 3.6, 3.7, or 3.8; now continue the install using the  instructions for Linux.</p>"},{"location":"blog/2020/12/02/readfish-multiplatform-update/#setup-a-virtual-environment","title":"Setup a virtual environment:","text":"<pre><code>python3 -m venv venv\nsource ./venv/bin/activate\npip install --upgrade pip wheel\n</code></pre>"},{"location":"blog/2020/12/02/readfish-multiplatform-update/#install-deepnano-blitz","title":"Install DeepNano-Blitz:","text":"<p>Choose the <code>.whl</code> file corresponding to your OS and python version. E.g:</p> <pre><code>pip install deepnano2-0.1-cp36-cp36m-linux_x86_64.whl\n</code></pre>"},{"location":"blog/2020/12/02/readfish-multiplatform-update/#install-readfish","title":"Install ReadFish:","text":"<pre><code>pip install git+https://github.com/nanoporetech/read_until_api@v3.0.0\npip install git+https://github.com/LooseLab/readfish@caller_refactor\n\n# Install ont_pyguppy_client_lib that matches \n#   your guppy server version. E.G.\npip install ont_pyguppy_client_lib==4.0.11\n</code></pre>"},{"location":"blog/2020/12/02/readfish-multiplatform-update/#setting-the-cpu-caller","title":"Setting the CPU caller","text":"<p>To use DeepNano-Blitz for base calling the <code>caller_settings</code> table in the  experiment TOML file must contain the <code>network_type</code> parameter. For more  information on the available parameters see TOML.md.</p>"},{"location":"blog/archive/2020/","title":"2020","text":""}]}